/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SelectCustAndOrderCode.java
 *
 * Created on 16 Σεπ 2009, 9:36:57 πμ
 */
package DirectMail.Pre.Forms;

import DirectMail.Help.Components.MyDraggable;
import DirectMail.Main.MainForm;
import DirectMail.Options.DmOptions;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import soldatos.connection.MyDBCConnection;
import soldatos.functions.StringFunctions;

/**
 *
 * @author ssoldatos
 */
public class SelectCustAndOrderCode extends MyDraggable {

  ComboBoxModel customersModel;
  public String custCode, orderCode;
  public boolean isDefault = false;
  private boolean isSqlConnection;
  public boolean isAborted = false;
  private int numberOfResults;

  /** Creates new form SelectCustAndOrderCode
   * @param isSqlConnection 
   */
  public SelectCustAndOrderCode(boolean isSqlConnection) {
    try {
      this.isSqlConnection = isSqlConnection;
      Vector<String> companies = getCompanies("description", "");
      customersModel = new DefaultComboBoxModel(companies);
      initComponents();
      label_results.setText(numberOfResults + " αποτελέσματα");
      setLocationRelativeTo(null);
      setVisible(true);
    } catch (SQLException ex) {
      MainForm.myLog.log(Level.SEVERE, null, ex);
    }

  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    textfield_Order = new javax.swing.JTextField();
    button_ok = new javax.swing.JButton();
    jLabel4 = new javax.swing.JLabel();
    button_default = new javax.swing.JButton();
    combobox_customer = new javax.swing.JComboBox();
    toggle_cust = new javax.swing.JToggleButton();
    button_cancel = new javax.swing.JButton();
    jLabel5 = new javax.swing.JLabel();
    textfield_search = new javax.swing.JTextField();
    label_results = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

    jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

    jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() | java.awt.Font.BOLD, jLabel1.getFont().getSize()+2));
    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel1.setText("Fill the Customer and the Order Code");

    jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel2.setText("Customer :");

    jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel3.setText("Order :");

    button_ok.setText("ERP Data");
    button_ok.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        button_okActionPerformed(evt);
      }
    });

    jLabel4.setText("Click cancel for default values");

    button_default.setText("Default Data");
    button_default.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        button_defaultActionPerformed(evt);
      }
    });

    combobox_customer.setFont(new java.awt.Font("Monospaced", 0, 12));
    combobox_customer.setModel(customersModel);

    toggle_cust.setText("ID");
    toggle_cust.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        toggle_custActionPerformed(evt);
      }
    });

    button_cancel.setText("Cancel");
    button_cancel.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        button_cancelActionPerformed(evt);
      }
    });

    jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel5.setText("Search :");

    textfield_search.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        textfield_searchKeyReleased(evt);
      }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(button_ok)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(button_default)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(button_cancel))
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
              .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
              .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(textfield_Order, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(combobox_customer, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toggle_cust, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
              .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(textfield_search, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_results, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE))
          .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE))
        .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel5)
          .addComponent(textfield_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(label_results, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel2)
          .addComponent(combobox_customer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(toggle_cust))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel3)
          .addComponent(textfield_Order, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addComponent(jLabel4)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(button_ok)
          .addComponent(button_default)
          .addComponent(button_cancel))
        .addContainerGap())
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void button_defaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_defaultActionPerformed
      isDefault = true;
      dispose();
    }//GEN-LAST:event_button_defaultActionPerformed

    private void button_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_okActionPerformed
      String val = String.valueOf(combobox_customer.getSelectedItem());
      custCode = val.substring(0, 6);
      orderCode = StringFunctions.padLeft(textfield_Order.getText().trim(), 6, "0");
      dispose();
    }//GEN-LAST:event_button_okActionPerformed

    private void toggle_custActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggle_custActionPerformed
      try {
        Vector<String> companies = getCompanies("", textfield_search.getText().trim());
        customersModel = new DefaultComboBoxModel(companies);
        combobox_customer.setModel(customersModel);
      } catch (SQLException ex) {
        MainForm.myLog.log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_toggle_custActionPerformed

    private void button_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_cancelActionPerformed
      isAborted = true;
      dispose();
    }//GEN-LAST:event_button_cancelActionPerformed

    private void textfield_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfield_searchKeyReleased
      try {
        Vector<String> companies = getCompanies("", textfield_search.getText().trim());
        customersModel = new DefaultComboBoxModel(companies);
        combobox_customer.setModel(customersModel);
      } catch (SQLException ex) {
        MainForm.myLog.log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_textfield_searchKeyReleased
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton button_cancel;
  private javax.swing.JButton button_default;
  private javax.swing.JButton button_ok;
  private javax.swing.JComboBox combobox_customer;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JLabel label_results;
  private javax.swing.JTextField textfield_Order;
  private javax.swing.JTextField textfield_search;
  private javax.swing.JToggleButton toggle_cust;
  // End of variables declaration//GEN-END:variables

  private Vector<String> getCompanies(String order, String search) throws SQLException {
    Vector<String> combo = new Vector<String>();
    String sql;
    String searchString = "";
    combo.add("Select Company");
    if (order.equals("")) {
      order = toggle_cust.isSelected() ? "vendor" : "description";
    }

    if (isSqlConnection) {
      if (!search.equals("")) {
        searchString = " AND (CHARINDEX('" + search + "', description) > 0 OR " +
            " CHARINDEX('" + search + "', vendor) > 0)";
      }
      MyDBCConnection.createMsSQLConnection();
      MyDBCConnection.connect(
          MainForm.options.toString(DmOptions.SQL_HOST),
          MainForm.options.toString(DmOptions.SQL_DB),
          MainForm.options.toString(DmOptions.SQL_USERNAME),
          MainForm.options.toString(DmOptions.SQL_PASSWORD));
      sql = "SELECT vendor, description FROM PAvendor WHERE vendor <>''"
          + " AND vendortype <> 3 " + searchString + " ORDER BY " + order;
    } else {
      if (!search.equals("")) {
        searchString = " AND (INSTR(description, '" + search + "') OR " +
            "INSTR(vendor, '" + search + "'))";
      }
      MainForm.myLog.log(Level.WARNING, "ERP connection was not found. Connecting to MySQL");
      MyDBCConnection.destroy();
      MyDBCConnection.createMySQLConnection();
      MyDBCConnection.connect(MainForm.options.toString(DmOptions.HOST),
          MainForm.options.toString(DmOptions.DATABASE),
          MainForm.options.toString(DmOptions.DB_USER),
          MainForm.options.toString(DmOptions.DB_PASSWORD));
      sql = "SELECT vendor, description FROM pavendor WHERE vendor <>''"
          + " AND vendortype <> 3 " + searchString + " ORDER BY " + order;
    }
    Statement stmt = MyDBCConnection.myConnection.createStatement();
    ResultSet rs = stmt.executeQuery(sql);
    numberOfResults = 0;
    while (rs.next()) {
      numberOfResults++;
      String code = StringFunctions.padLeft(rs.getString(1), 6, " ");
      String title = rs.getString(2);
      combo.add(code + " " + title);
    }

    if (isSqlConnection) {
      MyDBCConnection.createMySQLConnection();
    }
    if(label_results != null){
      label_results.setText(numberOfResults+ " αποτελέσματα");
    }
    return combo;
  }
}
