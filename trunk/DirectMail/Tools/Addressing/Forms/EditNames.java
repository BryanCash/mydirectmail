/*
 * EditNames.java
 *
 * Created on 23 Αύγουστος 2007, 12:38 μμ
 */
package DirectMail.Tools.Addressing.Forms;

import DirectMail.Main.MainForm;
import DirectMail.Options.DmOptions;
import soldatos.exceptions.DelimeterNotFoundException;
import soldatos.connection.MyDBCConnection;
import DirectMail.Tools.File.PFile;
import soldatos.messages.Messages;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import javax.swing.text.BadLocationException;

/**
 *
 * @author  ssoldatos
 */
public class EditNames extends javax.swing.JFrame implements Runnable {

  private MyDBCConnection mdbc;
  private PreparedStatement pstmt;
  private MainForm m;
  private int totalLines;

  public EditNames(MainForm m) throws SQLException {
    MainForm.glassPane.activate(null);
    String pSql;
    this.m = m;
    MyDBCConnection.connect(MainForm.options.toString(DmOptions.HOST),
        MainForm.options.toString(DmOptions.DATABASE),
        MainForm.options.toString(DmOptions.DB_USER),
        MainForm.options.toString(DmOptions.DB_PASSWORD));
    //prepare statement
    pSql = "INSERT INTO total (Field1, Field2) VALUES (?, ?)";

    pstmt = MyDBCConnection.myConnection.prepareStatement(pSql);

    initComponents();
    setVisible(true);
  }

  /** Creates new form EditNames
   * @param m 
   * @param filename
   * @throws SQLException
   * @throws IOException
   */
  public EditNames(MainForm m, String filename) throws SQLException, IOException {
    MainForm.glassPane.activate(null);
    String pSql;
    this.m = m;
   MyDBCConnection.connect(MainForm.options.toString(DmOptions.HOST),
        MainForm.options.toString(DmOptions.DATABASE),
        MainForm.options.toString(DmOptions.DB_USER),
        MainForm.options.toString(DmOptions.DB_PASSWORD));
    //prepare statement
    pSql = "INSERT INTO total (Field1, Field2) VALUES (?, ?)";

    pstmt = MyDBCConnection.myConnection.prepareStatement(pSql);

    initComponents();
    setVisible(true);
    readNamesFile(filename);
  }

  private void computeCurrentLine() throws BadLocationException {
    int curLine;
    int pos;
    String curText;
    if (totalLines == 0) {
      totalLines = namesTextArea.getText().split("\n", -1).length;
    }

    pos = namesTextArea.getCaretPosition();
    curText = namesTextArea.getText(0, pos);
    curLine = curText.split("\n", -1).length;
    labelCurrent.setText("Current line: " + (curLine + 1) + " of " + totalLines);

  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    updateFrame = new javax.swing.JFrame();
    jLabel3 = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    namesTextArea = new javax.swing.JTextArea();
    importButton = new javax.swing.JButton();
    cancelButton = new javax.swing.JButton();
    saveButton = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    saveLabel = new javax.swing.JLabel();
    editFileName = new javax.swing.JTextField();
    biggerButton = new javax.swing.JButton();
    smallerButton = new javax.swing.JButton();
    openFileButton = new javax.swing.JButton();
    labelCurrent = new javax.swing.JLabel();

    updateFrame.setTitle("Updating Database");
    updateFrame.setAlwaysOnTop(true);
    updateFrame.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
    updateFrame.setEnabled(false);
    updateFrame.setMinimumSize(new java.awt.Dimension(150, 40));
    updateFrame.setLocationRelativeTo(null);
    updateFrame.setSize(280,80);

    jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14));
    jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel3.setText("Updating the names Database");

    javax.swing.GroupLayout updateFrameLayout = new javax.swing.GroupLayout(updateFrame.getContentPane());
    updateFrame.getContentPane().setLayout(updateFrameLayout);
    updateFrameLayout.setHorizontalGroup(
      updateFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(updateFrameLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
        .addContainerGap())
    );
    updateFrameLayout.setVerticalGroup(
      updateFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(updateFrameLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel3)
        .addContainerGap(16, Short.MAX_VALUE))
    );

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Edit names");

    namesTextArea.setColumns(20);
    namesTextArea.setFont(new java.awt.Font("Monospaced", 0, 12));
    namesTextArea.setRows(5);
    namesTextArea.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        namesTextAreaMouseClicked(evt);
      }
    });
    namesTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        namesTextAreaKeyPressed(evt);
      }
      public void keyReleased(java.awt.event.KeyEvent evt) {
        namesTextAreaKeyReleased(evt);
      }
    });
    jScrollPane1.setViewportView(namesTextArea);

    importButton.setText("Import to DB");
    importButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        importButtonActionPerformed(evt);
      }
    });

    cancelButton.setText("Cancel");
    cancelButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cancelButtonActionPerformed(evt);
      }
    });

    saveButton.setText("Save");
    saveButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        saveButtonActionPerformed(evt);
      }
    });

    jLabel1.setText("Press F1 before the letter to be accented");

    jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14));
    jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel2.setText("Edit names without accent");

    saveLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    saveLabel.setText("Filename: "+m.getCurrentDirectory()+"/");

    editFileName.setText("names(2).txt");

    biggerButton.setFont(new java.awt.Font("Tahoma", 0, 14));
    biggerButton.setText("Α");
    biggerButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        biggerButtonActionPerformed(evt);
      }
    });

    smallerButton.setFont(new java.awt.Font("Tahoma", 0, 10));
    smallerButton.setText("Α");
    smallerButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        smallerButtonActionPerformed(evt);
      }
    });

    openFileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DirectMail/Images/open.gif"))); // NOI18N
    openFileButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        openFileButtonActionPerformed(evt);
      }
    });

    labelCurrent.setText("Current Line : ");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
              .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(importButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveButton))
              .addComponent(jLabel1)
              .addGroup(layout.createSequentialGroup()
                .addComponent(openFileButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(biggerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(smallerButton))
              .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)))
          .addGroup(layout.createSequentialGroup()
            .addGap(290, 290, 290)
            .addComponent(labelCurrent, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap())
    );

    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {biggerButton, openFileButton, smallerButton});

    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, importButton});

    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel2)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(openFileButton)
            .addComponent(biggerButton))
          .addComponent(smallerButton))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(labelCurrent, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(saveLabel)
          .addComponent(editFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(saveButton)
          .addComponent(cancelButton)
          .addComponent(importButton))
        .addContainerGap())
    );

    layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {biggerButton, openFileButton, smallerButton});

    java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
    setBounds((screenSize.width-772)/2, (screenSize.height-442)/2, 772, 442);
  }// </editor-fold>//GEN-END:initComponents

  private boolean isVowel(String text) {
    if ((text.equals("α")) || (text.equals("ε")) || (text.equals("η")) || (text.equals("ι")) || (text.equals("ο")) || (text.equals("υ")) || (text.equals("ω"))) {
      return true;
    }
    return false;
  }

  private void openFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileButtonActionPerformed
    try {
      PFile pfile = new PFile("open", "main", false, m);
      pfile.openFile("names", true);
    } catch (DelimeterNotFoundException ex) {
      MainForm.myLog.log(Level.SEVERE, null, ex);
    } catch (IOException ex) {
        MainForm.myLog.log(Level.WARNING, null, ex);
    }



  }//GEN-LAST:event_openFileButtonActionPerformed

  private void smallerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smallerButtonActionPerformed
    Font f = namesTextArea.getFont();
    namesTextArea.setFont(new Font(f.getName(), f.getSize(), f.getSize() - 1));
  }//GEN-LAST:event_smallerButtonActionPerformed

  private void biggerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_biggerButtonActionPerformed
    Font f = namesTextArea.getFont();
    namesTextArea.setFont(new Font(f.getName(), f.getSize(), f.getSize() + 1));
  }//GEN-LAST:event_biggerButtonActionPerformed

  private void edit() throws SQLException, BadLocationException, IOException{
     int wrongCount = 0, rightCount = 0;
    PrintWriter outWrong = null;
    int tLines, start = 0, end = 0;
    String name_upper, name_lower;

    //open the wrong names file
    outWrong = new PrintWriter(new BufferedWriter(new FileWriter(m.getCurrentDirectory() + "//wrong_names.txt")));
    // read text area line by line
    String text = namesTextArea.getText();
    tLines = namesTextArea.getLineCount();
    updateFrame.setVisible(true);
    for (int i = 0; i < tLines; i++) {
      start = namesTextArea.getLineStartOffset(i);
      end = namesTextArea.getLineEndOffset(i);
      String line = text.substring(start, end);
      if (line.length() > 50) {
        name_upper = line.substring(0, 50).trim();
        name_lower = line.substring(50).trim();

        if (checkNames(name_upper, name_lower)) {

          pstmt.setString(1, name_upper);
          pstmt.setString(2, name_lower);
          pstmt.executeUpdate();


          rightCount++;
        } else {
          outWrong.print(line);
          wrongCount++;
        }
      } else {
        if (i < tLines - 1) {
          Messages.customError("Wrong line length", "Wrong line length at line " + (i + 1));
        }
      }
    }
    outWrong.close();
    updateFrame.setVisible(false);

    Messages.customError("Names were imported", "" + rightCount + " names were imported in the DB\n" + wrongCount +
        " wrong names were found and were saved in file wrong_names.txt");
    dispose();
    MainForm.glassPane.deactivate();
  }

  private void importButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importButtonActionPerformed
    try {
      edit();
    } catch (Exception ex) {
        MainForm.myLog.log(Level.WARNING, null, ex);
    }
  }//GEN-LAST:event_importButtonActionPerformed

  private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
    try {
      PrintWriter out;
      out = new PrintWriter(new BufferedWriter(new FileWriter(m.getCurrentDirectory() + "//" + editFileName.getText())));
      out.print(namesTextArea.getText());
      out.close();
      Messages.customError("File Saved", "File " + editFileName.getText() + " was saved");
      dispose();
    } catch (IOException ex) {
        MainForm.myLog.log(Level.WARNING, null, ex);
    } finally {
      MainForm.glassPane.deactivate();
    }
  }//GEN-LAST:event_saveButtonActionPerformed

  private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
    dispose();
    MainForm.glassPane.deactivate();
  }//GEN-LAST:event_cancelButtonActionPerformed

  private void namesTextAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_namesTextAreaKeyReleased
    int curPos = 0;
    // IF fpress F1
    curPos = namesTextArea.getCaretPosition();
    if (evt.getKeyCode() == 112) {
      // select the next letter
      namesTextArea.select(curPos, curPos + 1);
      namesTextArea.replaceSelection("" + addAccent(namesTextArea.getSelectedText()));
    }
  //else
  //LEFT
//    if (evt.getKeyCode() == 37){
//      try {
//	while (!isVowel(namesTextArea.getText(curPos, curPos + 1)) || !namesTextArea.getText(curPos, curPos + 1).equals(" ")) {
//	  namesTextArea.setCaretPosition(curPos - 1);
//	}
//      } catch (BadLocationException ex) {
//	MainForm.myLog.log(Level.SEVERE, null, ex);
//      }
//    } else
//    //RIGHT
//    if (evt.getKeyCode() == 39){
//      
//    }
  }//GEN-LAST:event_namesTextAreaKeyReleased

  private void namesTextAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_namesTextAreaMouseClicked
    try {
      computeCurrentLine();
    } catch (BadLocationException ex) {
        MainForm.myLog.log(Level.WARNING, null, ex);
    }
  }//GEN-LAST:event_namesTextAreaMouseClicked

  private void namesTextAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_namesTextAreaKeyPressed
    try {
      computeCurrentLine();
    } catch (BadLocationException ex) {
        MainForm.myLog.log(Level.WARNING, null, ex);
    }
  }//GEN-LAST:event_namesTextAreaKeyPressed
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private static javax.swing.JButton biggerButton;
  private static javax.swing.JButton cancelButton;
  private static javax.swing.JTextField editFileName;
  private static javax.swing.JButton importButton;
  private static javax.swing.JLabel jLabel1;
  private static javax.swing.JLabel jLabel2;
  private static javax.swing.JLabel jLabel3;
  private static javax.swing.JScrollPane jScrollPane1;
  private static javax.swing.JLabel labelCurrent;
  public static javax.swing.JTextArea namesTextArea;
  private static javax.swing.JButton openFileButton;
  private static javax.swing.JButton saveButton;
  private static javax.swing.JLabel saveLabel;
  private static javax.swing.JButton smallerButton;
  private static javax.swing.JFrame updateFrame;
  // End of variables declaration//GEN-END:variables

  @Override
  public void run() {
  }

  private void readNamesFile(String filename) throws IOException {
    BufferedReader in = null;
    File namesFile = new File(filename);
    String str;


    in = new BufferedReader(new FileReader(namesFile));
    while ((str = in.readLine()) != null) {
      namesTextArea.append(str + "\n");
    }



  }

  private char addAccent(String cString) {
    char cAccented = '\u0000';
    char c = cString.charAt(0);


    if (c == 'α') {
      cAccented = 'ά';
    } else if (c == 'ε') {
      cAccented = 'έ';
    } else if (c == 'η') {
      cAccented = 'ή';
    } else if (c == 'ι') {
      cAccented = 'ί';
    } else if (c == 'ο') {
      cAccented = 'ό';
    } else if (c == 'υ') {
      cAccented = 'ύ';
    } else if (c == 'ω') {
      cAccented = 'ώ';
    } else if (c == 'Α') {
      cAccented = '’';
    } else if (c == 'Ε') {
      cAccented = 'Έ';
    } else if (c == 'Η') {
      cAccented = 'Ή';
    } else if (c == 'Ι') {
      cAccented = 'Ί';
    } else if (c == 'Ο') {
      cAccented = 'Ό';
    } else if (c == 'Υ') {
      cAccented = 'Ύ';
    } else if (c == 'Ω') {
      cAccented = 'Ώ';
    } else if (c == 'ϊ') {
      cAccented = 'ΐ';
    } else if (c == 'ϋ') {
      cAccented = 'ΰ';
    } else {
      cAccented = c;
    }
    return cAccented;
  }

  private boolean checkNames(String name_upper, String name_lower) {
    String name_lower_noAccent;

    name_upper = name_upper.toUpperCase();
    name_lower = name_lower.replace('ΐ', 'ι');
    name_lower = name_lower.replace('ΰ', 'υ');

    if (name_upper.length() != name_lower.length()) {
      return false;
    } else if (name_upper.equalsIgnoreCase(name_lower)) {
      return false;
    } else {
      name_lower_noAccent = name_lower.toUpperCase();
      name_lower_noAccent = name_lower_noAccent.replace('’', 'Α');
      name_lower_noAccent = name_lower_noAccent.replace('Έ', 'Ε');
      name_lower_noAccent = name_lower_noAccent.replace('Ή', 'Η');
      name_lower_noAccent = name_lower_noAccent.replace('Ί', 'Ι');
      name_lower_noAccent = name_lower_noAccent.replace('Ό', 'Ο');
      name_lower_noAccent = name_lower_noAccent.replace('Ύ', 'Υ');
      name_lower_noAccent = name_lower_noAccent.replace('Ώ', 'Ω');
      if (!name_upper.equals(name_lower_noAccent)) {
        return false;
      } else {
        return true;
      }
    }
  }
}
