/*
 * SelectReprintFile.java
 *
 * Created on 23 Ιούλιος 2007, 5:31 μμ
 */
package DirectMail.Post.Forms;

import DirectMail.Help.Components.Errors;
import DirectMail.*;
import DirectMail.Help.Components.MyDraggable;
import DirectMail.Main.MainForm;
import DirectMail.Tools.File.PFile;
import DirectMail.Post.ReprintFile;
import soldatos.exceptions.DelimeterNotFoundException;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.*;
import java.util.logging.Level;

/**
 *
 * @author  ssoldatos
 */
public class SelectReprintFile extends MyDraggable {

  public static File rFile = null;
  public static String rFileName = "";
  private MainForm m;
  private Toolkit toolkit;
  private Clipboard clipboard;

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    popup = new javax.swing.JPopupMenu();
    popUpPaste = new javax.swing.JMenuItem();
    jLabel1 = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    textAreaReprint = new javax.swing.JTextArea();
    okButton = new javax.swing.JButton();
    cancelButton = new javax.swing.JButton();
    jLabel3 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    jMenuBar1 = new javax.swing.JMenuBar();
    jMenu1 = new javax.swing.JMenu();
    openFileMenuItem = new javax.swing.JMenuItem();
    appendFileMenuItem = new javax.swing.JMenuItem();

    popUpPaste.setText("Paste");
    popUpPaste.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        popUpPasteActionPerformed(evt);
      }
    });
    popup.add(popUpPaste);

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("GRAFFOTYPIKI S.A. - Reprint File");
    setIconImage(new javax.swing.ImageIcon("D:\\JavaProjects\\DirectMail\\src\\DirectMail\\Images\\reprint.gif").getImage());
    setMinimumSize(new java.awt.Dimension(400, 450));

    jLabel1.setText("Open a file or copy-paste  the reprint ID's here :");

    textAreaReprint.setColumns(10);
    textAreaReprint.setFont(new java.awt.Font("Monospaced", 0, 12));
    textAreaReprint.setRows(5);
    textAreaReprint.setComponentPopupMenu(popup);
    jScrollPane1.setViewportView(textAreaReprint);

    okButton.setText("OK");
    okButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        okButtonActionPerformed(evt);
      }
    });

    cancelButton.setText("Cancel");
    cancelButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cancelButtonActionPerformed(evt);
      }
    });

    jLabel3.setText("For multiple envelopes the format shoul be: ");

    jLabel4.setText("ID,number of pages");

    jMenu1.setText("File");

    openFileMenuItem.setIcon(new javax.swing.ImageIcon("D:\\JavaProjects\\DirectMail\\src\\DirectMail\\Images\\open.gif")); // NOI18N
    openFileMenuItem.setText("Open");
    openFileMenuItem.setToolTipText("Opens a file");
    openFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        openFileMenuItemActionPerformed(evt);
      }
    });
    jMenu1.add(openFileMenuItem);

    appendFileMenuItem.setIcon(new javax.swing.ImageIcon("D:\\JavaProjects\\DirectMail\\src\\DirectMail\\Images\\append.gif")); // NOI18N
    appendFileMenuItem.setText("Append File");
    appendFileMenuItem.setToolTipText("Appends a file to the open one");
    appendFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        appendFileMenuItemActionPerformed(evt);
      }
    });
    jMenu1.add(appendFileMenuItem);

    jMenuBar1.add(jMenu1);

    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGap(10, 10, 10)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGap(113, 113, 113))
          .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(okButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(cancelButton))
          .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel3)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel4))
          .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)))
        .addContainerGap())
    );

    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel3)
          .addComponent(jLabel4))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(okButton)
          .addComponent(cancelButton))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents
  private void appendFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appendFileMenuItemActionPerformed
    try {
      try {
        m.getPFile().openFile("reprint", true);
      } catch (DelimeterNotFoundException ex) {
        MainForm.myLog.log(Level.SEVERE, null, ex);
      }
    } catch (IOException ex) {
      MainForm.myLog.log(Level.SEVERE, null, ex);
    }
  }//GEN-LAST:event_appendFileMenuItemActionPerformed

  private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
    String[] curLineArr;
    String r = textAreaReprint.getText();
    int c = r.split("\n", -1).length;
    int reprintPages[] = new int[c];
    int[] reprintIds = new int[c];
    String str = "";
    int i = 0;


    BufferedReader in = new BufferedReader(new StringReader(r));
    try {
      while ((str = in.readLine()) != null && !str.trim().equals("")) {
        curLineArr = str.split(",", -1);
        if (curLineArr.length == 1) {
          reprintIds[i] = Integer.parseInt(str);
          reprintPages[i] = 1;
        } else {
          reprintIds[i] = Integer.parseInt(curLineArr[0]);
          reprintPages[i] = Integer.parseInt(curLineArr[1]);
        }
        i++;
      }
      int l = reprintIds.length;
      ReprintFile rf = new ReprintFile(reprintIds, reprintPages, m);
      Thread t = new Thread(rf);
      t.start();
      dispose();
      MainForm.glassPane.deactivate();
    } catch (IOException ex) {
      Errors.IOError(ex.getMessage());
      ex.printStackTrace();
      MainForm.glassPane.deactivate();
    } catch (NumberFormatException ex) {
      Errors.customError("Wrong number", "Wrong number in line: " + str);
    }


  }//GEN-LAST:event_okButtonActionPerformed

  private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
    dispose();
    MainForm.glassPane.deactivate();
  }//GEN-LAST:event_cancelButtonActionPerformed

  private void openFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileMenuItemActionPerformed
    try {
      try {
        m.setPFile(new PFile("open","",false,m));
        m.getPFile().openFile("reprint", false);
      } catch (DelimeterNotFoundException ex) {
        MainForm.myLog.log(Level.SEVERE, null, ex);
      }
    } catch (IOException ex) {
      MainForm.myLog.log(Level.SEVERE, null, ex);
    }
  }//GEN-LAST:event_openFileMenuItemActionPerformed

  private void popUpPasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popUpPasteActionPerformed
    try {
      toolkit = Toolkit.getDefaultToolkit();
      clipboard = toolkit.getSystemClipboard();
      Transferable content = clipboard.getContents(this);
      String data = (String) content.getTransferData(DataFlavor.stringFlavor);//GEN-LAST:event_popUpPasteActionPerformed
      if (textAreaReprint.getText().equals("")) {
        textAreaReprint.append(data);
      } else {
        textAreaReprint.append("\n" + data);
      }
    } catch (UnsupportedFlavorException ex) {
      MainForm.myLog.log(Level.SEVERE, null, ex);
    } catch (IOException ex) {
      MainForm.myLog.log(Level.SEVERE, null, ex);
    }
  }

  public SelectReprintFile(MainForm m) {
    this.m = m;
    initComponents();
    setLocationRelativeTo(m);
    MainForm.glassPane.activate(null);
    setVisible(true);
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JMenuItem appendFileMenuItem;
  private javax.swing.JButton cancelButton;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JMenu jMenu1;
  private javax.swing.JMenuBar jMenuBar1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JButton okButton;
  private javax.swing.JMenuItem openFileMenuItem;
  private javax.swing.JMenuItem popUpPaste;
  private javax.swing.JPopupMenu popup;
  private static javax.swing.JTextArea textAreaReprint;
  // End of variables declaration//GEN-END:variables

  public static void setTextAreaReprint(String text) {
    textAreaReprint.setText(text);
  }

  public static void appendTextAreaReprint(String file_string) {
    textAreaReprint.append(file_string);
  }
}
