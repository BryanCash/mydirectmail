/*
 * SelectCheckAddress.java
 *
 * Created on 28 Ιούλιος 2007, 8:57 μμ
 */
package DirectMail.Tools.Row.Forms;

import DirectMail.Main.MainForm;
import DirectMail.*;
import DirectMail.Help.Components.MyDraggable;
import DirectMail.Tools.Row.DeleteDuplicates;
import soldatos.functions.SwingFunctions;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.sql.SQLException;
import java.util.logging.Level;
import javax.swing.JLabel;
import soldatos.functions.StringFunctions;

/**
 * Breaks one or more long fields to shorter ones
 * @author ssoldatos
 */
public class SelectDeleteDupl extends MyDraggable {

  /**
   * A boolean array holding a boolean value for every field
   * True : break the field
   * False : Do not break it
   */
  boolean fieldsToCheck[];
  /**
   * The number of fields to check
   */
  int checks = 0;
  boolean export = false;
  boolean lastName = false;
  boolean firstName3chars = false;
  String exportFilename = "";
  private MainForm m;
  private boolean deleteDupls = false;

  /**
   * Constructor:
   * Inits the panel and adds a label for every field.
   * Clicking on a fields marks/umarks it for breaking.
   * @param m
   */
  public SelectDeleteDupl(MainForm m) {
     MainForm.glassPane.activate(null);
    this.m = m;
    fieldsToCheck = new boolean[m.getFields()];
    initComponents();
    addCheckFields();
    setLocationRelativeTo(m);
    setVisible(true);
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    labelTitle = new javax.swing.JLabel();
    okButton = new javax.swing.JButton();
    cancelButton = new javax.swing.JButton();
    exportTextBox = new javax.swing.JTextField();
    exportCheckBox = new javax.swing.JCheckBox();
    lastNameCheckBox = new javax.swing.JCheckBox();
    firstnameCheckbox = new javax.swing.JCheckBox();
    deleteLinesCheckBox = new javax.swing.JCheckBox();
    jScrollPane1 = new javax.swing.JScrollPane();
    checkFieldsPanel = new javax.swing.JPanel();

    setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
    setTitle("Select which fields should break");
    setResizable(false);

    jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

    labelTitle.setFont(new java.awt.Font("Tahoma", 1, 14));
    labelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    labelTitle.setText("Select fields to check for duplicates");

    okButton.setText("OK");
    okButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        okButtonActionPerformed(evt);
      }
    });

    cancelButton.setText("Cancel");
    cancelButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cancelButtonActionPerformed(evt);
      }
    });

    exportTextBox.setText("duplicates.txt");
    exportTextBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        exportTextBoxActionPerformed(evt);
      }
    });

    exportCheckBox.setSelected(true);
    exportCheckBox.setText("Export a file with the duplicate lines :");
    exportCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
    exportCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
    exportCheckBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        exportCheckBoxActionPerformed(evt);
      }
    });

    lastNameCheckBox.setText("Check LastName for Male / Female");
    lastNameCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
    lastNameCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

    firstnameCheckbox.setText("Use 3 first letters of firstname");
    firstnameCheckbox.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

    deleteLinesCheckBox.setText("Delete lines from the file");
    deleteLinesCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
    deleteLinesCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

    checkFieldsPanel.setLayout(new javax.swing.BoxLayout(checkFieldsPanel, javax.swing.BoxLayout.Y_AXIS));
    jScrollPane1.setViewportView(checkFieldsPanel);

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(labelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
          .addComponent(lastNameCheckBox)
          .addComponent(firstnameCheckbox)
          .addComponent(deleteLinesCheckBox)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(exportCheckBox)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(exportTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(okButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(cancelButton))
          .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, Short.MAX_VALUE))
        .addContainerGap())
    );

    jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(labelTitle)
        .addGap(3, 3, 3)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(firstnameCheckbox)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(lastNameCheckBox)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(deleteLinesCheckBox)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(exportCheckBox)
          .addComponent(exportTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(cancelButton)
          .addComponent(okButton))
        .addContainerGap())
    );

    jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {exportCheckBox, firstnameCheckbox, lastNameCheckBox});

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  /**
   * Cancels the breaking
   * @param evt Clicking th ecancel button event
   */
  private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
    fieldsToCheck = null;
    dispose();
    MainForm.glassPane.deactivate();
  }//GEN-LAST:event_cancelButtonActionPerformed

  /**
   * Commits the breaking
   * @param evt Clicking the OK button event
   */
  private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
    export = exportCheckBox.isSelected();
    lastName = lastNameCheckBox.isSelected();
    firstName3chars = firstnameCheckbox.isSelected();
    exportFilename = exportTextBox.getText();
    deleteDupls = deleteLinesCheckBox.isSelected();
    if (lastName && !(m.getSurnameField() > -1)) {
      soldatos.messages.Messages.customError("No Surname field", "No field is marked as a surname field");
      return;
    }
    if (firstName3chars && !(m.getFirstnameField() > -1)) {
      soldatos.messages.Messages.customError("No Firstname field", "No field is marked as a firstname field");
      return;
    }
    if (lastName && firstName3chars) {
      soldatos.messages.Messages.customError("Not Available !!!", "Checking for both male/female lastname and first name 3 chars is not available yet");
      return;
    }

    dispose();
    DeleteDuplicates dd;
    try {
      dd = new DeleteDuplicates(fieldsToCheck, export, exportFilename, m, lastName, firstName3chars, deleteDupls);
      Thread t = new Thread(dd);
      t.start();
    } catch (SQLException ex) {
      MainForm.myLog.log(Level.SEVERE, null, ex);
    } finally{
      MainForm.glassPane.deactivate();
    }

  }//GEN-LAST:event_okButtonActionPerformed

  private void exportCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportCheckBoxActionPerformed
  }//GEN-LAST:event_exportCheckBoxActionPerformed

  private void exportTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportTextBoxActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_exportTextBoxActionPerformed

  /**
   * Adds the labels for all the fields on the panel
   */
  private void addCheckFields() {
    String flArr[] = new String[m.getFields()];
    flArr = m.getFirstLine().split("" + m.getDelimeter(), -1);
    final Font selected = new Font("Monospaced", Font.BOLD, 14);
    final Font notSelected = new Font("Monospaced", Font.PLAIN, 14);

    for (int i = 0; i < m.getFields(); i++) {
      fieldsToCheck[i] = false;
      JLabel l = new JLabel();
      //System.out.println(Functions.padRight("Field "+i,10," ")+": "+Functions.cutString(flArr[i],20)+"\n");
      l.setText(StringFunctions.padRight(m.getHeaderTitles().get(i), 12, " ") + ": " + StringFunctions.cutString(flArr[i], 20));
      l.setName("" + i);
      l.setFont(notSelected);

      
        // mouse over
        l.addMouseListener(new java.awt.event.MouseAdapter() {

          @Override
          public void mouseEntered(java.awt.event.MouseEvent evt) {
            labelMouseOver(evt);
          }
        });
        //mouseout
        l.addMouseListener(new java.awt.event.MouseAdapter() {

          @Override
          public void mouseExited(java.awt.event.MouseEvent evt) {
            labelMouseOut(evt);
          }
        });

        // Click
        l.addMouseListener(new java.awt.event.MouseAdapter() {

          @Override
          public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getComponent().getFont() == selected) {
              evt.getComponent().setFont(notSelected);
              if (checks > 0) {
                checks--;
              }
            } else {
              evt.getComponent().setFont(selected);
              checks++;
            }
            int id = Integer.parseInt(evt.getComponent().getName());
            fieldsToCheck[id] = !fieldsToCheck[id];
          }
        });
      
      checkFieldsPanel.add(l);
    }

  }

  /**
   * Sets the cursor to hand
   * Changes the label's color to red
   * @param evt The mouse over event
   */
  private static void labelMouseOver(java.awt.event.MouseEvent evt) {
    // Font big = new Font("Monospace",Font.BOLD,14);
    evt.getComponent().setCursor(new Cursor(Cursor.HAND_CURSOR));
    //evt.getComponent().setFont(big);
    evt.getComponent().setForeground(Color.RED);
  }

  /**
   * Changes the label's color to black
   * @param evt The mouse out event
   */
  private static void labelMouseOut(java.awt.event.MouseEvent evt) {
    //Font small = new Font("Monospace",Font.BOLD,12);
    //evt.getComponent().setCursor(new Cursor(Cursor.HAND_CURSOR));
    //evt.getComponent().setFont(small);
    evt.getComponent().setForeground(Color.BLACK);
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton cancelButton;
  private javax.swing.JPanel checkFieldsPanel;
  private javax.swing.JCheckBox deleteLinesCheckBox;
  private javax.swing.JCheckBox exportCheckBox;
  private javax.swing.JTextField exportTextBox;
  private javax.swing.JCheckBox firstnameCheckbox;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JLabel labelTitle;
  private javax.swing.JCheckBox lastNameCheckBox;
  private javax.swing.JButton okButton;
  // End of variables declaration//GEN-END:variables
}
