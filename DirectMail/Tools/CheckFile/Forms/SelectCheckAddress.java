/*
 * SelectCheckAddress.java
 *
 * Created on 28 Ιούλιος 2007, 8:57 μμ
 */
package DirectMail.Tools.CheckFile.Forms;

import DirectMail.Main.MainForm;
import DirectMail.*;
import DirectMail.Help.Components.MyDraggable;
import DirectMail.Tools.CheckFile.CheckAddress;
import soldatos.functions.SwingFunctions;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.sql.SQLException;
import java.util.logging.Level;
import javax.swing.JLabel;
import soldatos.functions.StringFunctions;

/**
 * Breaks one or more long fields to shorter ones
 * @author ssoldatos
 */
public class SelectCheckAddress extends MyDraggable {

  /**
   * A boolean array holding a boolean value for every field
   * True : break the field
   * False : Do not break it
   */
  boolean fieldsToCheck[];
  /**
   * The number of fields to check
   */
  int checks = 0;
  boolean export = false;
  String exportFilename = "";
  private MainForm m;
  private boolean delete;
  private boolean checkAgainstDB;

  /**
   * Constructor:
   * Inits the panel and adds a label for every field.
   * Clicking on a fields marks/umarks it for breaking.
   * @param m 
   */
  public SelectCheckAddress(MainForm m) {
    MainForm.glassPane.activate(null);
    this.m = m;
    fieldsToCheck = new boolean[m.getFields()];
    initComponents();
    addBreakFields();
    setLocationRelativeTo(m);
    setVisible(true);
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    labelTitle = new javax.swing.JLabel();
    okButton = new javax.swing.JButton();
    checkFieldsPanel = new javax.swing.JPanel();
    cancelButton = new javax.swing.JButton();
    exportTextBox = new javax.swing.JTextField();
    exportCheckBox = new javax.swing.JCheckBox();
    checkbox_delete = new javax.swing.JCheckBox();
    checkbox_checkTkAgainstDB = new javax.swing.JCheckBox();

    setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
    setTitle("Select which fields should break");
    setResizable(false);

    jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

    labelTitle.setFont(labelTitle.getFont().deriveFont(labelTitle.getFont().getStyle() | java.awt.Font.BOLD, labelTitle.getFont().getSize()+2));
    labelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    labelTitle.setText("Select fields to check");

    okButton.setText("OK");
    okButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        okButtonActionPerformed(evt);
      }
    });

    checkFieldsPanel.setFont(new java.awt.Font("Monospaced", 0, 14));
    checkFieldsPanel.setLayout(new javax.swing.BoxLayout(checkFieldsPanel, javax.swing.BoxLayout.Y_AXIS));

    cancelButton.setText("Cancel");
    cancelButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cancelButtonActionPerformed(evt);
      }
    });

    exportTextBox.setText("wrongAddresses.txt");

    exportCheckBox.setSelected(true);
    exportCheckBox.setText("Export a file with the wrong lines :");
    exportCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
    exportCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

    checkbox_delete.setText(" Delete wrong lines from file");
    checkbox_delete.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
    checkbox_delete.setMargin(new java.awt.Insets(0, 0, 0, 0));

    checkbox_checkTkAgainstDB.setText("Check TK against Database");
    checkbox_checkTkAgainstDB.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(checkFieldsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
          .addComponent(labelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(okButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(cancelButton))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addComponent(exportCheckBox)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
            .addComponent(exportTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(checkbox_delete)
            .addGap(245, 245, 245))
          .addComponent(checkbox_checkTkAgainstDB))
        .addContainerGap())
    );

    jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(labelTitle)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(checkFieldsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(checkbox_checkTkAgainstDB)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(exportCheckBox)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(checkbox_delete))
          .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(exportTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(okButton)
          .addComponent(cancelButton))
        .addContainerGap())
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  /**
   * Cancels the breaking
   * @param evt Clicking th ecancel button event
   */
  private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
    fieldsToCheck = null;
    dispose();
    MainForm.glassPane.deactivate();
  }//GEN-LAST:event_cancelButtonActionPerformed

  /**
   * Commits the breaking
   * @param evt Clicking the OK button event
   */
  private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
    try {
      export = exportCheckBox.isSelected();
      exportFilename = exportTextBox.getText();
      delete = checkbox_delete.isSelected();
      checkAgainstDB = checkbox_checkTkAgainstDB.isSelected();
      dispose();
      CheckAddress ca = new CheckAddress(fieldsToCheck, checks, export, exportFilename, m, delete, checkAgainstDB);
      Thread t = new Thread(ca);
      t.start();
    } catch (SQLException ex) {
      MainForm.myLog.log(Level.WARNING, null, ex);
    } finally {
      MainForm.glassPane.deactivate();
    }
  }//GEN-LAST:event_okButtonActionPerformed

  /**
   * Adds the labels for all the fields on the panel
   */
  private void addBreakFields() {
    String flArr[] = new String[m.getFields()];
    flArr = m.getFirstLine().split("" + m.getDelimeter(), -1);
    final Font selected = new Font("Monospaced", Font.BOLD, 14);
    final Font notSelected = new Font("Monospaced", Font.PLAIN, 14);

    for (int i = 0; i < m.getFields(); i++) {
      fieldsToCheck[i] = false;
      JLabel l = new JLabel();
      //System.out.println(Functions.padRight("Field "+i,10," ")+": "+Functions.cutString(flArr[i],20)+"\n");
      l.setText(StringFunctions.padRight(m.getHeaderTitles().get(i), 12, " ") + ": " + StringFunctions.cutString(flArr[i], 20));
      l.setName("" + i);
      l.setFont(notSelected);

      // mouse over
      l.addMouseListener(new java.awt.event.MouseAdapter() {

        @Override
        public void mouseEntered(java.awt.event.MouseEvent evt) {
          labelMouseOver(evt);
        }
      });
      //mouseout
      l.addMouseListener(new java.awt.event.MouseAdapter() {

        @Override
        public void mouseExited(java.awt.event.MouseEvent evt) {
          labelMouseOut(evt);
        }
      });

      // Click
      l.addMouseListener(new java.awt.event.MouseAdapter() {

        @Override
        public void mouseClicked(java.awt.event.MouseEvent evt) {
          if (evt.getComponent().getFont() == selected) {
            evt.getComponent().setFont(notSelected);
            if (checks > 0) {
              checks--;
            }
          } else {
            evt.getComponent().setFont(selected);
            checks++;
          }
          int id = Integer.parseInt(evt.getComponent().getName());
          fieldsToCheck[id] = !fieldsToCheck[id];
        }
      });

      checkFieldsPanel.add(l);
    }

  }

  /**
   * Sets the cursor to hand
   * Changes the label's color to red
   * @param evt The mouse over event
   */
  private static void labelMouseOver(java.awt.event.MouseEvent evt) {
    // Font big = new Font("Monospace",Font.BOLD,14);
    evt.getComponent().setCursor(new Cursor(Cursor.HAND_CURSOR));
    //evt.getComponent().setFont(big);
    evt.getComponent().setForeground(Color.RED);
  }

  /**
   * Changes the label's color to black
   * @param evt The mouse out event
   */
  private static void labelMouseOut(java.awt.event.MouseEvent evt) {
    //Font small = new Font("Monospace",Font.BOLD,12);
    //evt.getComponent().setCursor(new Cursor(Cursor.HAND_CURSOR));
    //evt.getComponent().setFont(small);
    evt.getComponent().setForeground(Color.BLACK);
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton cancelButton;
  private javax.swing.JPanel checkFieldsPanel;
  private javax.swing.JCheckBox checkbox_checkTkAgainstDB;
  private javax.swing.JCheckBox checkbox_delete;
  private javax.swing.JCheckBox exportCheckBox;
  private javax.swing.JTextField exportTextBox;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JLabel labelTitle;
  private javax.swing.JButton okButton;
  // End of variables declaration//GEN-END:variables
}
